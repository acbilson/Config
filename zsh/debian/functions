#!/bin/zsh

# this function returns location and other information from an ip address
whoip () {
	if ! hash curl 2>/dev/null; then
		echo "Please install curl to continue.\ne.g. >sudo apt-get install curl -y";
		return 1;
	fi

	echo checking ip address: $1
	curl http://ipinfo.io/$1
}

# this function reports the IP addresses that accessed blog posts and which posts were accessed

whoread () {
	
	if [ ! -f ~/.zsh_env ]; then
		echo "Please supply a ~/.zsh_env file with a MY_IP var to continue.";
		return 1;
	fi

	if ! hash jq 2>/dev/null; then
		echo "Please install jq to continue.\ne.g. >sudo apt-get install jq -y";
		return 1;
	fi

	# loads env variables
	. ~/.zsh_env

	# gets all records in nginx logs that retrieve blog posts
	zgrep '/posts/\|/books/' /var/log/nginx/simple-access* \
		| grep -v "$MY_IP" \
		| awk -F '|' '{print $2}' \
		| sort | uniq \
		> /tmp/ip_query.txt

	echo "All IPs that retrieved blog posts from the website:"
	cat /tmp/ip_query.txt

	# queries for location info for each ip
	</tmp/ip_query.txt xargs -I % curl -s http://ipinfo.io/% \
		| jq -r '.ip + ":\t" + .city + ", " + .region + " " + .country' \
		> /tmp/ip_locs.txt

	echo "\nThe location of each ip:"
	cat /tmp/ip_locs.txt

	# all requests to retrieve blog posts
	zgrep -h '/posts/\|/books/' /var/log/nginx/simple-access* \
		| grep -v "$MY_IP" \
		| grep -v 'favicon.ico' \
		| awk -F '|' '{print $1,$2,$5}' \
		> /tmp/ip_posts.txt

	echo "\nThe blog posts and times accessed:"
	cat /tmp/ip_posts.txt
}

moddirs () {
	MOD=755;

	if [ ! -d "$1" ]; then
		echo "Please enter a root directory to begin directory chmod.";
		return 1;
	fi

	if [ "$2" ]; then 
		MOD="$2"
	fi


	find "$1" -type d -exec sudo chmod "$MOD" {} \;
	echo "directories under $1 set to $MOD";
}

modfiles () {
	MOD=644;

	if [ ! -d "$1" ]; then
		echo "Please enter a root directory to begin file chmod.";
		return 1;
	fi

	if [ "$2" ]; then 
		MOD="$2"
	fi

	find "$1" -type f -exec sudo chmod "$MOD" {} \;
	echo "directories under $1 set to $MOD";
}

killuwsgi () {
	sudo pkill -f uwsgi -9
}

# this is specifically to set git directories, which require the setuid and setgid flags (+s)
modgit () {
	if [ ! -d "$1" ]; then
		echo "Please enter a root directory to begin file chmod.";
		return 1;
	fi

	find "$1" -type d -exec sudo chown pi:web {} \;
	echo "directories under $1 owned by pi:web";
	find "$1" -type d -exec sudo chmod u=rwxs,g=rxs,o=r {} \;
	echo "directories under $1 set to u=rwxs,g=rxs,o=r";

	find "$1" -type f -exec sudo chown pi:web {} \;
	echo "files under $1 owned by pi:web";
	find "$1" -type f -exec sudo chmod u=rwxs,g=rxs,o=r {} \;
	echo "files under $1 set to u=rwxs,g=rxs,o=r";
}

mylogs () {
	if [ ! -d "$1" ]; then
		zgrep -h '' /var/log/nginx/simple-access*
	fi

	zgrep -h '' /var/log/nginx/simple-access*
}

# this is an example of tcpdump that writes all dns traffic to a temp file
dnstraffic () {

	# -i : specifies interface
	# dst : destination (or src)
	# port : port 53 is dns
	# -A : prints hex and ascii request body (tshark is -x)
	# -f : tshark uses -f 'dst port 53' instead
	sudo tcpdump -i eth0 dst port 53 -w /tmp/dnstraffic.pcap
}

# this is an example that reads the captured dns traffic
readtraffic () {

	# for tcpdump, replace tshark
	tshark -r /tmp/dnstraffic.pcap
}
