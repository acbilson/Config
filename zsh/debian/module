#!/bin/zsh

# # # # # # # #
# FUNCTIONS
# # # # # # # #

## filters my IP, then bots, then prints counts
actual_reads () {
	zgrep -v $MY_IP /var/log/nginx/simple-access* \
		| grep -i -v '(.*bot.*)' \
		| grep -v 'Bytespider' \
		| grep -e 'comments' -e 'posts' \
		| awk -F '|' '{print $5}' \
		| sort | uniq -c | sort -n
}

## filters my IP, then bots, then prints IP addresses
actual_readers () {
	zgrep -v $MY_IP /var/log/nginx/simple-access* \
		| grep -i -v '(.*bot.*)' \
		| grep -v 'Bytespider' \
		| grep -e 'comments' -e 'posts' \
		| awk -F '|' '{print $2}' \
		| sort | uniq -c | sort -n
}

## filters my IP, then bots, then prints location information for my top n readers. Defaults to 10.
top_reader_info () {
	VIEWER_COUNT=10

	if [ "$1" ]; then
		VIEWER_COUNT="$1"
	fi

	# filters my IP, then bots, then prints counts
	zgrep -v $MY_IP /var/log/nginx/simple-access* \
		| grep -i -v '(.*bot.*)' \
		| grep -v 'Bytespider' \
		| grep -e 'comments' -e 'posts' \
		| awk -F '|' '{print $2}' \
		| sort | uniq -c | sort -n | tail -n $VIEWER_COUNT \
		| awk '{print $2}' > /tmp/top_viewers.txt

	# retrieves IP address info for top viewers
	</tmp/top_viewers.txt xargs -I % curl -s http://ipinfo.io/% \
			| jq -r '.ip + ":\t\t" + .city + ", " + .region + " " + .country' \
			> /tmp/top_viewer_info.txt

	cat /tmp/top_viewer_info.txt
}

## Runs chmod on all directories recursively
moddirs () {
	MOD=755;

	if [ ! -d "$1" ]; then
		echo "Please enter a root directory to begin directory chmod.";
		return 1;
	fi

	if [ "$2" ]; then
		MOD="$2"
	fi


	find "$1" -type d -exec sudo chmod "$MOD" {} \;
	echo "directories under $1 set to $MOD";
}

## Runs chmod on all files recursively
modfiles () {
	MOD=644;

	if [ ! -d "$1" ]; then
		echo "Please enter a root directory to begin file chmod.";
		return 1;
	fi

	if [ "$2" ]; then
		MOD="$2"
	fi

	find "$1" -type f -exec sudo chmod "$MOD" {} \;
	echo "directories under $1 set to $MOD";
}

## kills all uwsgi processes
killuwsgi () {
	sudo pkill -f uwsgi -9
}

## changes the owner and permissions of all files and directories in a git repo and ensures new files will be set to the same ownership and permission
modgit () {
	if [ ! -d "$1" ]; then
		echo "Please enter a root directory to begin file chmod.";
		return 1;
	fi

	find "$1" -type d -exec sudo chown pi:web {} \;
	echo "directories under $1 owned by pi:web";
	find "$1" -type d -exec sudo chmod u=rwxs,g=rxs,o=r {} \;
	echo "directories under $1 set to u=rwxs,g=rxs,o=r";

	find "$1" -type f -exec sudo chown pi:web {} \;
	echo "files under $1 owned by pi:web";
	find "$1" -type f -exec sudo chmod u=rwxs,g=rxs,o=r {} \;
	echo "files under $1 set to u=rwxs,g=rxs,o=r";
}

## prints all nginx logs
mylogs () {
	if [ ! -d "$1" ]; then
		zgrep -h '' /var/log/nginx/simple-access*
	fi

	zgrep -h '' /var/log/nginx/simple-access*
}

## dumps all dns traffic to a temp file
dnstraffic () {

	# -i : specifies interface
	# dst : destination (or src)
	# port : port 53 is dns
	# -A : prints hex and ascii request body (tshark is -x)
	# -f : tshark uses -f 'dst port 53' instead
	sudo tcpdump -i eth0 dst port 53 -w /tmp/dnstraffic.pcap
}

## reads the captured traffic from dnstraffic()
readtraffic () {

	# for tcpdump, replace tshark
	tshark -r /tmp/dnstraffic.pcap
}

# # # # # # # #
# ALIASES
# # # # # # # #

# to temporarily bypass an alias that overwrites the original
# prepend '\'. e.g. >\ls

alias ls="ls -lAhF --group-directories-first --time-style=+'%Y/%m/%d %k:%M' --color=auto"
alias ps="ps -eo pid,euser,stime,cmd --forest"
alias weblog="grep -hv \"$MY_IP\" /var/log/nginx/simple-access.log /var/log/nginx/simple-access.log.1 | awk -F '|' '{print \$1,\$2,\$4,\$5}' | sort -k 4 | uniq"
alias accesslog="cat /var/log/auth.log /var/log/auth.log.1 | grep -i failed"
alias ports="netstat -tulpn"
alias apthistory="cat /var/log/apt/history.log"
alias renew_cert="sudo certbot certonly --manual --preferred-challenges=dns --email acbilson@gmail.com --agree-tos -d alexbilson.dev -d '*.alexbilson.dev'"

alias weblog_v2="cat /var/log/nginx/simple-access.log /var/log/nginx/simple-access.log.1 | grep -v '216.80.113.4' | awk -F '|' '{print \$2,\$4,\$5}' | sort -k 4 | uniq"
